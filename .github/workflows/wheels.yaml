---
name: Wheels

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  REPO_DIR: pyproj
  WHEEL_SDIR: wheelhouse
  SETUPTOOLS_USE_DISTUTILS: stdlib

jobs:
  build:
    name: ${{ matrix.python }} ${{ matrix.os-name }} ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-20.04", "macos-10.15" ]
        python: [ "3.8", "3.9", "3.10", "pypy3.8-7.3.7"]
        platform: [ "x86_64",  "i686"]
        macos-target: [ "10.15" ]
        exclude:
          - os: "macos-10.15"
            platform: "i686"
        include:
          - os: "macos-10.15"
            os-name: "osx"
          - os: "ubuntu-20.04"
            os-name: "focal"
    env:
      BUILD_COMMIT: "3.3.0"
      PLAT: "${{ matrix.platform }}"
      MB_PYTHON_VERSION: "${{ matrix.python }}"
      MB_ML_VER: "2014"
      BUILD_DEPENDS: "cython"
      TEST_DEPENDS: "cython pytest numpy pandas xarray"
      TRAVIS_OS_NAME: ${{ matrix.os-name }}
      MACOSX_DEPLOYMENT_TARGET: ${{ matrix.macos-target }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Build Wheel
        run: .github/workflows/build.sh
      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.whl
      - name: Publish package
        if: github.event_name == 'push'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: wheelhouse/

  success:
    needs: [build]
    runs-on: ubuntu-latest
    name: Wheels Successful
    steps:
      - name: Success
        run: echo Wheels Successful
